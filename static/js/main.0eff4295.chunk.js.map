{"version":3,"sources":["Context.js","Components/Contact/Contact.js","Components/Contact/Contacts.js","Components/layout/Header.js","Components/layout/TextInputGroup.js","Components/Contact/AddContact.js","Components/Contact/EditContact.js","Components/Pages/About.js","Components/Pages/NotFound.js","Components/Test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContact","onShowClick","onDelete","a","delete","name","email","phone","className","style","cursor","onClick","float","color","bind","to","marginRight","key","Header","defaultProps","propstype","PropTypes","string","isRequired","TextInputGroup","label","placeholder","onChange","error","htmlFor","AddContact","e","target","onSubmit","preventDefault","history","push","EditContact","newContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","userId","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0eff4295.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext(); \nconst reducer =(state,action)=>{\n    switch(action.type){\n      case 'DELETE_CONTACT':\n        return{\n          ...state,\n          Contacts:state.Contacts.filter(contact=>\n            contact.id!==action.payload)\n        }\n      case 'ADD_CONTACT':\n        return{\n          ...state,\n          Contacts:[action.payload,...state.Contacts]\n        };\n        case 'UPDATE_CONTACT':\n          return{\n            ...state,\n            Contacts:state.Contacts.map(contact=>\n              contact.id===action.payload.id?(\n                contact=action.payload):contact)  \n          }\n        default:\n          return state;\n    }\n}\nexport  class Provider extends Component {\n  state={\n    Contacts: [],\n    dispatch:action=>this.setState(state => \n      reducer(state,action))\n    \n  };\n  async componentDidMount(){\n  const res= await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      Contacts:res.data\n    });\n  }\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\nexport  const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nclass Contact extends Component {\n  state = {\n    showContact: true\n  };\n\n  onShowClick = () => {\n    this.setState({ showContact: !this.state.showContact });\n  };\n  onDelete = async (id,dispatch) => {\n     await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n     dispatch({type:'DELETE_CONTACT',payload:id});  \n  };\n\n  render() {\n    const {id,name,email,phone} = this.props.contact;\n    const {showContact}=this.state;\n    return(\n    <Consumer>\n      {value => {\n        const {dispatch}=value;\n        return (\n          <div className=\"card card-body mb-3\">\n            <h1>\n              {name}\n              <i\n                className=\"fa fa-sort-down\"\n                style={{ cursor: \"pointer\" }}\n                onClick={this.onShowClick}\n              ></i>\n              \n              <i\n                className=\"fa fa-times\"\n                style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                onClick={this.onDelete.bind(this,id,dispatch)}\n              ></i>\n              <Link to={`contact/edit/${id}`}>\n              <i\n                className=\"fa fa-edit\"\n                style={{ cursor: \"pointer\", float: \"right\", color: \"black \",marginRight:'1rem' }}\n              />\n              </Link>\n            </h1>\n            {showContact ? (\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email:{email}</li>\n                <li className=\"list-group-item\">Contact:{phone}</li>\n              </ul>\n            ) : null}\n          </div>\n        );\n      }}\n    </Consumer>\n    )\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../Context';\n class Contacts extends Component {\n   constructor(){\n     super();\n     this.state={\n      \n     };\n   }\n   render(){\n     return(\n       <Consumer>\n         {value=>{\n           const {Contacts}=value;\n          return (  \n        <div>\n        <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n            </h1>\n       {Contacts.map(contact=>(\n          <Contact \n          key={contact.id}\n          contact={contact}/>\n        ))} \n      </div>\n    )\n         }}\n       </Consumer>\n     )\n   }\n}\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nconst Header = (props)=> {\n  const {name} = props\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n      <Link to=\"/\" className=\"navbar-brand\">{name}  </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\"> \n              <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fa fa-home\"></i>\n              Home\n              </Link>\n            </li>\n            <li className=\"nav-item\"> \n              <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fa fa-user-plus\"></i>\n              Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\"> \n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fa fa-users\"></i>\n              About US\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Header\n\nHeader.defaultProps = {\n  name:'myapp'\n}\n\nHeader.propstype = {\n  name: PropTypes.string.isRequired\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport className from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  placeholder,\n  value,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={className(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      ></input>\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport axios from 'axios';\nimport TextInputGroup from \"../layout/TextInputGroup\";\n class AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    contact: \"\",\n    error:{}\n  };\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, contact,error} = this.state;\n    //Check for errors\n    if(name===''){\n      this.setState({ error: {name:\"name is required\"}});\n      return;\n    }\n    if(email===''){\n      this.setState({ error: {email:\"email is required\"}});\n      return;\n    }\n    if(contact===''){\n      this.setState({ error: {contact:\"Phone No is required\"}});\n      return;\n    }\n     \n    this.setState({\n      name: \"\",\n      email: \"\",\n      contact: \"\",\n      error:{}\n    });\n    this.props.history.push('/');\n  };\n  render() {\n    const { name, email, contact,error} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={error.name}\n                  ></TextInputGroup>\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={error.email}\n                  >\n                  </TextInputGroup>\n                  <TextInputGroup\n                    label=\"Contact\"\n                    name=\"contact\"\n                    placeholder=\"Enter Phone...\"\n                    value={contact}\n                    onChange={this.onChange}\n                    error={error.contact}\n                  ></TextInputGroup>\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  ></input>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport axios from 'axios';\nimport TextInputGroup from \"../layout/TextInputGroup\";\n class EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    error:{}\n  };\nasync componentDidMount(){\n  const {id}=this.props.match.params;\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n  const contact= res.data;\n  this.setState({\n    name:contact.name,\n    email:contact.email,\n    phone:contact.phone \n  });\n}\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone,error} = this.state;\n    //Check for errors\n    if(name===''){\n      this.setState({ error: {name:\"name is required\"}});\n      return;\n    }\n    if(email===''){\n      this.setState({ error: {email:\"email is required\"}});\n      return;\n    }\n    if(phone===''){\n      this.setState({ error: {phone:\"Phone No is required\"}});\n      return;\n    }\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    const{id}=this.props.match.params;\n   const res=await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,newContact);\n   dispatch({ type: \"UPDATE_CONTACT\", payload: res.data});\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error:{}\n    });\n    this.props.history.push('/');\n  };\n  render() {\n    const { name, email, phone,error} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={error.name}\n                  ></TextInputGroup>\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={error.email}\n                  >\n                  </TextInputGroup>\n                  <TextInputGroup\n                    label=\"Contact\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={error.phone}\n                  ></TextInputGroup>\n\n                  <input\n                    type=\"submit\"\n                    value=\"Edit Contact\"\n                    className=\"btn btn-light btn-block\"\n                  ></input>\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to manage Contact</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">Opps <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\"> Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n    state={\n      title:'',\n      body:''\n    }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n    .then(response => response.json())\n    .then(data => this.setState({\n      userId:data.userId,\n      title:data.title\n    }));\n  }\n  // componentWillMount(){\n  //   console.log(\"Hello ComponentWillMount......\");\n  // }\n  // componentDidUpdate(){\n  //   console.log(\"ComponentDidUpdate\");\n  // }\n  // componentWillUpdate(){\n  //   console.log(\"ComponentWillUpdate\");\n  // }\n  render() {\n    const {userId,title}=this.state;\n    return (\n      <div>\n        <h1 className=\"display-4\">{userId}</h1>\n        <p className=\"lead\">{title}</p>\n      </div>\n    );\n  }\n}\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./Components/Contact/Contacts\";\nimport Header from \"./Components/layout/Header\";\nimport AddContact from \"./Components/Contact/AddContact\";\nimport EditContact from \"./Components/Contact/EditContact\";\nimport About from \"./Components/Pages/About\";\nimport NotFound from './Components/Pages/NotFound';\nimport Test from './Components/Test/test';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Provider } from \"./Context\";\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header name=\"Contact Manager\" />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound}></Route>\n            </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}